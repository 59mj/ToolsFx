plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.5.30"
    id 'application'
    id "com.diffplug.spotless" version "5.14.2"
    id "io.gitlab.arturbosch.detekt" version "1.18.0"
    id "org.openjfx.javafxplugin" version "0.0.10" apply false
}
def isJdk11 = !isJdk8.toBoolean()
if (isJdk11) apply plugin: "org.openjfx.javafxplugin"
group = 'me.leon.toolfx'
version = '1.5.1'

repositories {
    mavenCentral()
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url 'https://maven.aliyun.com/repository/google' }
}

application {
    mainClassName = "me.leon.MainKt"
}

dependencies {
    implementation "no.tornado:tornadofx:$tornadofx_version"
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
//    implementation 'com.jfoenix:jfoenix:8.0.10'
//    implementation 'com.github.bkenn:kfoenix:0.1.3'

    implementation 'com.google.zxing:javase:3.4.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.5.30'
}
if (isJdk11) {
    javafx {
        version = "16"
        modules = [
                'javafx.controls',
                'javafx.swing',
//            if you use javafx.fxml,then uncomment it
//            'javafx.fxml'
        ]
    }
}


apply from: "$rootProject.projectDir/config/codeQuality.gradle"
def hook = new File("$rootProject.projectDir/.git/hooks/pre-commit")
hook.text = """#!/bin/bash
echo "run code format"
./gradlew spotlessJCh spotlessKCh
echo "run code smell check"
./gradlew detekt
"""